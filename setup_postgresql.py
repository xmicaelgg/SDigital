#!/usr/bin/env python3
"""
Script para configurar PostgreSQL para el proyecto RMA Recepci√≥n
"""

import subprocess
import sys
import os

def run_command(command, description):
    """Ejecutar un comando y mostrar el resultado"""
    print(f"\nüîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} completado exitosamente")
            if result.stdout:
                print(result.stdout)
        else:
            print(f"‚ùå Error en {description}:")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå Error ejecutando {description}: {e}")
        return False
    return True

def main():
    print("üêò Configurando PostgreSQL para RMA Recepci√≥n")
    print("=" * 50)
    
    # Verificar si PostgreSQL est√° instalado
    print("\nüîç Verificando instalaci√≥n de PostgreSQL...")
    
    # Intentar conectar a PostgreSQL
    psql_check = run_command("psql --version", "Verificando PostgreSQL")
    
    if not psql_check:
        print("\n‚ùå PostgreSQL no est√° instalado o no est√° en el PATH")
        print("\nüì• Para instalar PostgreSQL en Windows:")
        print("1. Descarga PostgreSQL desde: https://www.postgresql.org/download/windows/")
        print("2. Ejecuta el instalador")
        print("3. Usa la contrase√±a: admin")
        print("4. Puerto: 5432")
        print("5. Reinicia este script despu√©s de la instalaci√≥n")
        return
    
    # Crear la base de datos
    print("\nüóÑÔ∏è Configurando la base de datos...")
    
    # Crear base de datos
    create_db = run_command(
        'psql -U postgres -c "CREATE DATABASE rma_recepcion_db;"',
        "Creando base de datos rma_recepcion_db"
    )
    
    if not create_db:
        print("\n‚ö†Ô∏è La base de datos ya existe o hay un error de conexi√≥n")
        print("Continuando con la configuraci√≥n...")
    
    # Verificar conexi√≥n
    test_connection = run_command(
        'psql -U postgres -d rma_recepcion_db -c "SELECT version();"',
        "Probando conexi√≥n a la base de datos"
    )
    
    if test_connection:
        print("\n‚úÖ PostgreSQL configurado correctamente!")
        print("\nüìã Configuraci√≥n de la base de datos:")
        print("   - Nombre: rma_recepcion_db")
        print("   - Usuario: postgres")
        print("   - Contrase√±a: admin")
        print("   - Host: localhost")
        print("   - Puerto: 5432")
        
        print("\nüöÄ Ahora puedes ejecutar:")
        print("   python manage.py migrate")
        print("   python manage.py createsuperuser")
        print("   python manage.py runserver")
    else:
        print("\n‚ùå Error en la configuraci√≥n de PostgreSQL")
        print("Verifica que PostgreSQL est√© ejecut√°ndose y las credenciales sean correctas")

if __name__ == "__main__":
    main() 